.rich-text-dynamic-container {
  display: block;
  width: 100%;
  margin-bottom: 25px;
  position: relative;
}

.rich-text-dynamic-container.error .input-group {
  box-shadow: 
    inset 8px 8px 16px rgba(255, 59, 92, 0.2),
    inset -8px -8px 16px var(--shadow-dark),
    0 0 0 2px var(--error-color) !important;
}

.input-group {
  position: relative;
  background: var(--input-bg);
  border-radius: 15px;
  box-shadow:
    inset 8px 8px 16px var(--shadow-light),
    inset -8px -8px 16px var(--shadow-dark);
  transition: all 0.3s ease;
  padding: 8px;
}

.input-group.focused {
  box-shadow:
    inset 4px 4px 8px var(--shadow-light),
    inset -4px -4px 8px var(--shadow-dark);
}

.input-group.disabled {
  opacity: 0.6;
  pointer-events: none;
}

/* Label flutuante - MESMO PADRÃO DO INPUT-DYNAMIC */
.input-group label {
  position: absolute;
  left: 55px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  font-size: 16px;
  font-weight: 400;
  pointer-events: none;
  transition: all 0.3s ease;
  z-index: 10;
  background: var(--input-bg);
  padding: 0 8px;
  margin: 0;
}

.input-group.has-value label,
.input-group.focused label {
  top: 8px;
  font-size: 12px;
  color: var(--text-muted);
  transform: translateY(0);
}

.input-icon {
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 20px;
  height: 20px;
  color: var(--text-secondary);
  transition: all 0.3s ease;
  z-index: 10;
}

.input-icon svg {
  width: 100%;
  height: 100%;
}

.input-group:focus-within .input-icon,
.input-group.focused .input-icon {
  color: var(--text-muted);
}

/* === Ajuste visual para RICH TEXT com ícone === */
/* Container do editor */
.editor-container {
  width: 100%;
  max-width: 100%;
  overflow: hidden;
}

/* Garantir que todos os elementos filhos respeitem o container */
::ng-deep .quill-editor .ql-container .ql-editor * {
  max-width: 100% !important;
}

/* Prevenir scroll horizontal */
::ng-deep .quill-editor .ql-container {
  resize: none !important;
}

/* Estilo específico para parágrafos longos */
::ng-deep .quill-editor .ql-editor p {
  word-break: break-word !important;
  overflow-wrap: break-word !important;
  margin-bottom: 12px;
}

/* Para listas */
::ng-deep .quill-editor .ql-editor ul,
::ng-deep .quill-editor .ql-editor ol {
  word-break: break-word !important;
  overflow-wrap: break-word !important;
}

.input-group .quill-wrapper {
  margin-left: 35px;
  margin-top: 15px;
}

.input-group.textarea-group .quill-wrapper {
  margin-top: 25px;
}

.input-group.textarea-group .input-icon {
  top: 25px;
  transform: none;
}

.input-group.textarea-group label {
  top: 22px;
}

.input-group.textarea-group.has-value label,
.input-group.textarea-group.focused label {
  top: 8px;
  font-size: 12px;
  color: var(--text-muted);
}

/* Estilos do Quill Editor */
::ng-deep .quill-editor {
  width: 100%;
  background: transparent !important;
}

::ng-deep .quill-editor .ql-toolbar {
  background: var(--bg-primary);
  border: none !important;
  border-bottom: 1px solid var(--shadow-light) !important;
  border-radius: 8px 8px 0 0;
  padding: 12px 8px;
}

::ng-deep .quill-editor .ql-toolbar .ql-formats {
  margin-right: 16px;
}

::ng-deep .quill-editor .ql-toolbar button {
  width: 32px;
  height: 32px;
  border-radius: 6px;
  margin: 2px;
  background: var(--bg-primary);
  box-shadow: 
    2px 2px 4px var(--shadow-light),
    -2px -2px 4px var(--shadow-dark);
  border: none;
  transition: all 0.3s ease;
}

::ng-deep .quill-editor .ql-toolbar button:hover {
  box-shadow: 
    inset 2px 2px 4px var(--shadow-light),
    inset -2px -2px 4px var(--shadow-dark);
}

::ng-deep .quill-editor .ql-toolbar button.ql-active {
  box-shadow: 
    inset 2px 2px 4px var(--shadow-light),
    inset -2px -2px 4px var(--shadow-dark);
}

::ng-deep .quill-editor .ql-toolbar .ql-stroke {
  stroke: var(--text-primary);
}

::ng-deep .quill-editor .ql-toolbar .ql-fill {
  fill: var(--text-primary);
}

::ng-deep .quill-editor .ql-container {
  font-family: inherit;
  font-size: 14px;
  background: var(--input-bg);
  border: none !important;
  border-radius: 0 0 8px 8px;
  color: var(--text-primary);
  min-height: 120px;
  max-height: 300px;
  overflow-y: auto;
}

::ng-deep .quill-editor .ql-editor {
  padding: 16px;
  min-height: 120px;
  line-height: 1.5;
  color: var(--text-primary);
  max-width: 690px;
}

::ng-deep .quill-editor .ql-editor.ql-blank::before {
  color: var(--text-secondary);
  font-style: normal;
  font-size: 14px;
}

::ng-deep .quill-editor .ql-editor p {
  margin-bottom: 12px;
}

::ng-deep .quill-editor .ql-editor h1,
::ng-deep .quill-editor .ql-editor h2,
::ng-deep .quill-editor .ql-editor h3 {
  color: var(--text-primary);
  margin-bottom: 12px;
}

::ng-deep .quill-editor .ql-editor img {
  max-width: 100%;
  height: auto;
}

/* Contador de caracteres - MESMO PADRÃO DO INPUT-DYNAMIC */
.character-counter {
  display: flex;
  align-items: center;
  gap: 4px;
  margin-top: 8px;
  font-size: 12px;
  color: var(--text-secondary);
  padding: 0 20px;
}

.character-count {
  font-weight: 500;
}

.character-limit {
  color: var(--text-muted);
}

.character-limit.exceeded {
  color: var(--error-color);
}

.limit-exceeded {
  color: var(--error-color);
  font-weight: 500;
  margin-left: 4px;
}

/* Mensagem de erro - MESMO PADRÃO EXATO DO INPUT-DYNAMIC */
.error-message {
  color: var(--error-color) !important;
  font-size: 12px;
  font-weight: 500;
  margin-top: 8px;
  margin-left: 20px;
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}

.error-message.show {
  opacity: 1;
  transform: translateY(0);
}

/* Responsive - MESMO PADRÃO DO INPUT-DYNAMIC */
@media (max-width: 768px) {
  .input-group {
    padding: 6px;
  }

  .input-group label {
    left: 50px;
    font-size: 15px;
  }

  .input-icon {
    left: 18px;
    width: 18px;
    height: 18px;
  }

  .input-group .quill-wrapper {
    margin-left: 32px;
    margin-top: 12px;
  }

  .character-counter {
    padding: 0 18px;
    font-size: 11px;
  }

  ::ng-deep .quill-editor .ql-toolbar {
    padding: 8px 6px;
  }

  ::ng-deep .quill-editor .ql-toolbar .ql-formats {
    margin-right: 12px;
  }

  ::ng-deep .quill-editor .ql-toolbar button {
    width: 28px;
    height: 28px;
  }

  ::ng-deep .quill-editor .ql-editor {
    padding: 12px;
    min-height: 100px;
  }
}

@media (max-width: 480px) {
  .input-group {
    padding: 6px;
  }

  .input-group label {
    left: 45px;
    font-size: 14px;
  }

  .input-icon {
    left: 15px;
    width: 16px;
    height: 16px;
  }

  .input-group .quill-wrapper {
    margin-left: 30px;
    margin-top: 10px;
  }

  .character-counter {
    padding: 0 15px;
    font-size: 10px;
  }

  ::ng-deep .quill-editor .ql-toolbar {
    padding: 6px 4px;
  }

  ::ng-deep .quill-editor .ql-toolbar button {
    width: 26px;
    height: 26px;
  }

  ::ng-deep .quill-editor .ql-editor {
    padding: 10px;
    min-height: 80px;
  }
}

/* === Botão de alternância de visualização === */

/* Estado ativo — botão “pressionado” */
.toggle-view-btn.active {
  color: var(--text-primary);
  box-shadow:
    inset 3px 3px 6px var(--shadow-light),
    inset -3px -3px 6px var(--shadow-dark);
  transform: translateY(1px);
}

/* Ícone SVG dentro do botão */
.toggle-view-btn svg {
  width: 22px;
  height: 22px;
  stroke-width: 2;
  stroke: currentColor;
  fill: none;
}


/* === Visualização === */
.rich-text-viewer {
  background: var(--input-bg);
  border-radius: 8px;
  padding: 16px;
  color: var(--text-primary);
  min-height: 200px;
  overflow-y: auto;
  line-height: 1.6;
  font-size: 14px;
  max-width: 690px;
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
  box-shadow: inset 2px 2px 4px var(--shadow-light), inset -2px -2px 4px var(--shadow-dark);
}

/* rich-text-dynamic.component.scss */
::ng-deep .rich-text-viewer img,
::ng-deep .rich-text-viewer p img,
::ng-deep .rich-text-viewer span img {
  display: block;
  max-width: 400px !important;
  width: auto !important;
  height: auto !important;
  margin: 12px auto;
  object-fit: contain;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.12);
}



.rich-text-viewer h1,
.rich-text-viewer h2,
.rich-text-viewer h3 {
  margin-bottom: 10px;
  color: var(--text-primary);
}

.rich-text-viewer p {
  margin-bottom: 12px;
}

.rich-text-viewer img {
  max-width: 100%;
  border-radius: 6px;
  margin: 10px 0;
}


/* === Botões de ação === */
.action-buttons {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
  margin-bottom: 10px;
  margin-right: 10px;
}

.action-btn {
  background: var(--bg-primary);
  border: none;
  border-radius: 8px;
  padding: 6px;
  cursor: pointer;
  color: var(--text-secondary);
  box-shadow:
    3px 3px 6px var(--shadow-light),
    -3px -3px 6px var(--shadow-dark);
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
}

.action-btn:hover:not(:disabled) {
  color: var(--text-primary);
  box-shadow:
    inset 2px 2px 4px var(--shadow-light),
    inset -2px -2px 4px var(--shadow-dark);
}

.action-btn:active:not(:disabled) {
  transform: translateY(1px);
}

.action-btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  box-shadow: none;
}

/* Estado ativo do botão de visualização */
.toggle-view-btn.active {
  color: var(--text-primary);
  box-shadow:
    inset 3px 3px 6px var(--shadow-light),
    inset -3px -3px 6px var(--shadow-dark);
}

/* Ícones SVG dentro dos botões */
.action-btn svg {
  width: 22px;
  height: 22px;
  stroke-width: 2;
  stroke: currentColor;
  fill: none;
}

/* Efeito hover específico para o botão de limpar */
.clear-btn:hover:not(:disabled) {
  color: var(--error-color);
}

/* Efeito de pressão no botão de limpar */
.clear-btn:active:not(:disabled) {
  color: var(--error-color);
  box-shadow:
    inset 3px 3px 6px var(--shadow-light),
    inset -3px -3px 6px var(--shadow-dark);
}

/* Resto do CSS permanece igual... */

.rich-text-dynamic-container {
  display: block;
  width: 100%;
  margin-bottom: 25px;
  position: relative;
}

.rich-text-dynamic-container.error .input-group {
  box-shadow: 
    inset 8px 8px 16px rgba(255, 59, 92, 0.2),
    inset -8px -8px 16px var(--shadow-dark),
    0 0 0 2px var(--error-color) !important;
}

.input-group {
  position: relative;
  background: var(--input-bg);
  border-radius: 15px;
  box-shadow:
    inset 8px 8px 16px var(--shadow-light),
    inset -8px -8px 16px var(--shadow-dark);
  transition: all 0.3s ease;
  padding: 8px;
}

.input-group.focused {
  box-shadow:
    inset 4px 4px 8px var(--shadow-light),
    inset -4px -4px 8px var(--shadow-dark);
}

.input-group.disabled {
  opacity: 0.6;
  pointer-events: none;
}

/* Label flutuante */
.input-group label {
  position: absolute;
  left: 55px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  font-size: 16px;
  font-weight: 400;
  pointer-events: none;
  transition: all 0.3s ease;
  z-index: 10;
  background: var(--input-bg);
  padding: 0 8px;
  margin: 0;
}

.input-group.has-value label,
.input-group.focused label {
  top: 8px;
  font-size: 12px;
  color: var(--text-muted);
  transform: translateY(0);
}

.input-icon {
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 20px;
  height: 20px;
  color: var(--text-secondary);
  transition: all 0.3s ease;
  z-index: 10;
}

.input-icon svg {
  width: 100%;
  height: 100%;
}

.input-group:focus-within .input-icon,
.input-group.focused .input-icon {
  color: var(--text-muted);
}

/* === Ajuste visual para RICH TEXT com ícone === */
.input-group .quill-wrapper {
  margin-left: 35px;
  margin-top: 15px;
}

/* Resto do seu CSS existente... */